version: '3.1'

services:

  nginx: 
    image: nginx:latest
    container_name: production_nginx
    volumes:
      - .deploy/nginx/nginx.conf:/etc/nginx/nginx.conf
      - .deploy/nginx/error.log:/etc/nginx/error.log
      - .deploy/nginx/cache/:/etc/nginx/cache
      - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - '8080:8080'
    depends_on:
      - api
      - webapp
    links:      
      - api
      - webapp
    networks:
      - overlay

  db:
    image: postgres:alpine
    container_name: db
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ['CMD-SHELL', 'psql postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@localhost:5432/$${POSTGRES_DB} || exit 1']      
    volumes:
      - postgres_data:/var/lib/postgresql/data      
    ports:
      - "5432:5432"
    networks:
      - overlay
  
  api:
    container_name: api
    image: gauzy-api:latest
    build:
      context: .
      dockerfile: .deploy/api/Dockerfile
    environment:
      NODE_ENV: production
      WAIT_HOSTS: db:5432
    restart: on-failure
    depends_on:
      - db      
    links:
      - db
    volumes:
      - api:/usr/src/app
    ports:
      - 3000:3000
    networks:
      - overlay      
      
  webapp:
    container_name: webapp
    image: gauzy-webapp:latest
    build:
      context: .
      dockerfile: .deploy/webapp/Dockerfile
    environment:
      NODE_ENV: production
      WAIT_HOSTS: db:5432
    restart: on-failure
    links:      
      - db
      - api
    depends_on:      
      - db
      - api
    volumes:
      - webapp:/usr/src/app      
    ports:
      - 4200:4200
    networks:
      - overlay      

volumes:  
  postgres_data:
  webapp:
  api:
  certificates:

networks:
  overlay:  
